#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è CS:GO Market Tracker Bot —á–µ—Ä–µ–∑ Screen
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./bot_manager.sh [start|stop|status|connect|logs]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_NAME="cs-market-tracker-bot"
BOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
VENV_PATH="$BOT_DIR/.venv"
PYTHON_SCRIPT="$BOT_DIR/main.py"
LOG_FILE="$BOT_DIR/logs/bot.log"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ screen
check_screen() {
    if ! command -v screen &> /dev/null; then
        print_error "Screen –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ screen –∫–æ–º–∞–Ω–¥–æ–π:"
        echo "  macOS: brew install screen"
        echo "  Ubuntu: sudo apt install screen"
        echo "  CentOS: sudo yum install screen"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    if [[ ! -d "$VENV_PATH" ]]; then
        print_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: $VENV_PATH"
        print_info "–°–æ–∑–¥–∞–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π:"
        print_info "python -m venv .venv"
        exit 1
    fi
    
    if [[ ! -f "$PYTHON_SCRIPT" ]]; then
        print_error "–°–∫—Ä–∏–ø—Ç –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $PYTHON_SCRIPT"
        exit 1
    fi
    
    if [[ ! -f "$BOT_DIR/.env" ]]; then
        print_warning ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $BOT_DIR"
        print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É: python setup_bot.py setup"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
    if [[ -f "$BOT_DIR/.env" ]]; then
        if ! grep -q "BOT_TOKEN=" "$BOT_DIR/.env"; then
            print_warning "–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
        fi
    fi
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p "$BOT_DIR/logs"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
check_bot_status() {
    if screen -ls | grep -q "$BOT_NAME"; then
        return 0  # –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω
    else
        return 1  # –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω
    fi
}

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
start_bot() {
    print_info "–ó–∞–ø—É—Å–∫ CS:GO Market Tracker Bot..."
    
    if check_bot_status; then
        print_warning "–ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω!"
        return 0
    fi
    
    # –°–æ–∑–¥–∞–µ–º screen —Å–µ—Å—Å–∏—é –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    screen -dmS "$BOT_NAME" bash -c "
        cd '$BOT_DIR' && 
        source '$VENV_PATH/bin/activate' && 
        python '$PYTHON_SCRIPT' 2>&1 | tee -a '$LOG_FILE'
    "
    
    sleep 3
    
    if check_bot_status; then
        print_success "–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
        print_info "–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Å—Å–∏–∏: ./bot_manager.sh connect"
        print_info "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: ./bot_manager.sh logs"
        print_info "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: ./bot_manager.sh stop"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞
        if [[ -f "$LOG_FILE" ]]; then
            echo ""
            echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥–µ:"
            tail -n 5 "$LOG_FILE"
        fi
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        print_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: ./bot_manager.sh logs"
        exit 1
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
stop_bot() {
    print_info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ CS:GO Market Tracker Bot..."
    
    if ! check_bot_status; then
        print_warning "–ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 0
    fi
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º screen —Å–µ—Å—Å–∏—é
    screen -S "$BOT_NAME" -X quit
    
    sleep 2
    
    if ! check_bot_status; then
        print_success "–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
        print_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ: screen -S $BOT_NAME -X kill"
        exit 1
    fi
}

# –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞
show_status() {
    echo "ü§ñ === CS:GO Market Tracker Bot Status ==="
    echo ""
    
    if check_bot_status; then
        print_success "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
        echo ""
        echo "–ê–∫—Ç–∏–≤–Ω—ã–µ screen —Å–µ—Å—Å–∏–∏:"
        screen -ls | grep "$BOT_NAME" || echo "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        if command -v ps &> /dev/null; then
            echo ""
            echo "–ü—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞:"
            ps aux | grep -E "(python.*main\.py|$BOT_NAME)" | grep -v grep || echo "–ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥ —Ñ–∞–π–ª–∞
        if [[ -f "$LOG_FILE" ]]; then
            log_size=$(du -h "$LOG_FILE" | cut -f1)
            echo ""
            echo "–†–∞–∑–º–µ—Ä –ª–æ–≥ —Ñ–∞–π–ª–∞: $log_size"
        fi
    else
        print_warning "–ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    echo ""
    echo "–í—Å–µ screen —Å–µ—Å—Å–∏–∏:"
    screen -ls || echo "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö screen —Å–µ—Å—Å–∏–π"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    echo ""
    echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
    if [[ -f "$BOT_DIR/.env" ]]; then
        print_success ".env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
        if grep -q "BOT_TOKEN=" "$BOT_DIR/.env"; then
            print_success "–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        else
            print_warning "–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        if grep -q "ADMIN_ID=" "$BOT_DIR/.env"; then
            admin_id=$(grep "ADMIN_ID=" "$BOT_DIR/.env" | cut -d'=' -f2)
            print_success "ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: $admin_id"
        else
            print_warning "ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        fi
    else
        print_error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Å—Å–∏–∏
connect_to_bot() {
    if ! check_bot_status; then
        print_error "–ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: ./bot_manager.sh start"
        exit 1
    fi
    
    print_info "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Å—Å–∏–∏ –±–æ—Ç–∞..."
    print_info "–î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ Ctrl+A, –∑–∞—Ç–µ–º D"
    print_info "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C –≤ —Å–µ—Å—Å–∏–∏"
    sleep 2
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Å—Å–∏–∏
    screen -r "$BOT_NAME"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
show_logs() {
    if [[ -f "$LOG_FILE" ]]; then
        print_info "–ü–æ–∫–∞–∑—ã–≤–∞—é –ª–æ–≥–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):"
        echo "–§–∞–π–ª: $LOG_FILE"
        echo "=" * 60
        tail -f "$LOG_FILE"
    else
        print_warning "–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE"
        print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–æ–≤"
    fi
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤
show_recent_logs() {
    if [[ -f "$LOG_FILE" ]]; then
        print_info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 –∑–∞–ø–∏—Å–µ–π –≤ –ª–æ–≥–µ:"
        echo "–§–∞–π–ª: $LOG_FILE"
        echo "=" * 60
        tail -n 20 "$LOG_FILE"
    else
        print_warning "–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE"
    fi
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
restart_bot() {
    print_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ CS:GO Market Tracker Bot..."
    stop_bot
    sleep 3
    start_bot
}

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤
clear_logs() {
    if [[ -f "$LOG_FILE" ]]; then
        echo -n "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏? (y/N): "
        read -r response
        if [[ "$response" =~ ^[Yy]$ ]]; then
            > "$LOG_FILE"
            print_success "–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"
        else
            print_info "–û—Ç–º–µ–Ω–µ–Ω–æ"
        fi
    else
        print_warning "–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
check_updates() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if [[ -f "$BOT_DIR/requirements.txt" ]]; then
        source "$VENV_PATH/bin/activate"
        pip list --outdated
    else
        print_warning "requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –°–ø—Ä–∞–≤–∫–∞
show_help() {
    echo "ü§ñ CS:GO Market Tracker Bot Manager"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    echo "  start       - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  stop        - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
    echo "  restart     - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  status      - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
    echo "  connect     - –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏"
    echo "  logs        - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  recent      - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏"
    echo ""
    echo "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  clear-logs  - –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏"
    echo "  updates     - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
    echo "  help        - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 start      # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
    echo "  $0 status     # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "  $0 connect    # –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏"
    echo "  $0 logs       # –°–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
    echo ""
    echo "–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞:"
    echo "  –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç: $PYTHON_SCRIPT"
    echo "  –õ–æ–≥–∏: $LOG_FILE"
    echo "  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $BOT_DIR/.env"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_screen
    check_dependencies
    
    case "${1:-help}" in
        start)
            start_bot
            ;;
        stop)
            stop_bot
            ;;
        restart)
            restart_bot
            ;;
        status)
            show_status
            ;;
        connect)
            connect_to_bot
            ;;
        logs)
            show_logs
            ;;
        recent)
            show_recent_logs
            ;;
        clear-logs)
            clear_logs
            ;;
        updates)
            check_updates
            ;;
        help|--help|-h)
            show_help
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@" 